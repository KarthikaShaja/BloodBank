/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-12-04 17:35:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.authentication;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import blood.dto.*;
import blood.bl.*;
import blood.dl.*;
import blood.utlity.*;
import java.sql.Date;
import java.text.SimpleDateFormat;

public final class donor_005flogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("blood.dl");
    _jspx_imports_packages.add("blood.utlity");
    _jspx_imports_packages.add("blood.bl");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("blood.dto");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<title>Login</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write(" <script src=\"http://code.jquery.com/jquery-2.1.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write(" <style>\r\n");
      out.write("    #form label{float:left; width:140px;}\r\n");
      out.write("    #error_msg{color:red; font-weight:bold;}\r\n");
      out.write(" </style>\r\n");
      out.write("\r\n");
      out.write(" <script>\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("        var $submitBtn = $(\"#form input[type='submit']\");\r\n");
      out.write("        var $passwordBox = $(\"#password\");\r\n");
      out.write("        var $confirmBox = $(\"#confirm_password\");\r\n");
      out.write("        var $errorMsg =  $('<span id=\"error_msg\">Passwords do not match.</span>');\r\n");
      out.write("\r\n");
      out.write("        // This is incase the user hits refresh - some browsers will maintain the disabled state of the button.\r\n");
      out.write("        $submitBtn.removeAttr(\"disabled\");\r\n");
      out.write("\r\n");
      out.write("        function checkMatchingPasswords(){\r\n");
      out.write("            if($confirmBox.val() != \"\" && $passwordBox.val != \"\"){\r\n");
      out.write("                if( $confirmBox.val() != $passwordBox.val() ){\r\n");
      out.write("                    $submitBtn.attr(\"disabled\", \"disabled\");\r\n");
      out.write("                    $errorMsg.insertAfter($confirmBox);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function resetPasswordError(){\r\n");
      out.write("            $submitBtn.removeAttr(\"disabled\");\r\n");
      out.write("            var $errorCont = $(\"#error_msg\");\r\n");
      out.write("            if($errorCont.length > 0){\r\n");
      out.write("                $errorCont.remove();\r\n");
      out.write("            }  \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        $(\"#confirm_password, #password\")\r\n");
      out.write("             .on(\"keydown\", function(e){\r\n");
      out.write("                /* only check when the tab or enter keys are pressed\r\n");
      out.write("                 * to prevent the method from being called needlessly  */\r\n");
      out.write("                if(e.keyCode == 13 || e.keyCode == 9) {\r\n");
      out.write("                    checkMatchingPasswords();\r\n");
      out.write("                }\r\n");
      out.write("             })\r\n");
      out.write("             .on(\"blur\", function(){                    \r\n");
      out.write("                // also check when the element looses focus (clicks somewhere else)\r\n");
      out.write("                checkMatchingPasswords();\r\n");
      out.write("            })\r\n");
      out.write("            .on(\"focus\", function(){\r\n");
      out.write("                // reset the error message when they go to make a change\r\n");
      out.write("                resetPasswordError();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<style>\r\n");
      out.write("body {font-family: Arial, Helvetica, sans-serif;}\r\n");
      out.write("\r\n");
      out.write("form {border: 3px solid #f1f1f1;}\r\n");
      out.write("\r\n");
      out.write("input[type=text], input[type=password] {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  padding: 12px 20px;\r\n");
      out.write("  margin: 8px 0;\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  border: 1px solid #ccc;\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("  background-color: #4CAF50;\r\n");
      out.write("  color: white;\r\n");
      out.write("  padding: 14px 20px;\r\n");
      out.write("  margin: 8px 0;\r\n");
      out.write("  border: none;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("  opacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cancelbtn {\r\n");
      out.write("  width: auto;\r\n");
      out.write("  padding: 10px 18px;\r\n");
      out.write("  background-color: #f44336;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".imgcontainer {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  margin: 24px 0 12px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("img.avatar {\r\n");
      out.write("  width: 40%;\r\n");
      out.write("  border-radius: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("  padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("span.psw {\r\n");
      out.write("  float: right;\r\n");
      out.write("  padding-top: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Change styles for span and cancel button on extra small screens */\r\n");
      out.write("@media screen and (max-width: 300px) {\r\n");
      out.write("  span.psw {\r\n");
      out.write("     display: block;\r\n");
      out.write("     float: none;\r\n");
      out.write("  }\r\n");
      out.write("  .cancelbtn {\r\n");
      out.write("     width: 100%;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<h2>DONOR LOGIN</h2>\r\n");
      out.write("\r\n");
      out.write("<form id=\"form\" name=\"form\" action=\"../Blood/donor_login_add_process.jsp\" method=\"post\">\r\n");
      out.write("<div>\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("             \r\n");
      out.write("   <td height=\"33\" align=\"center\" valign=\"middle\" style=\"color: #F70509\">\r\n");
      out.write("   \r\n");
      out.write("        \r\n");
      out.write("   </td>\r\n");
      out.write(" </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("  <div class=\"imgcontainer\">\r\n");
      out.write("    <img src=\"../images/Blood.jpg\" alt=\"Blood\" class=\"Blood\">\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <label for=\"username\"><b>User ID</b></label>\r\n");
      out.write("    <input name=\"username\" id=\"username\" type=\"text\" value=\"");
      out.print(session.getAttribute("donorId"));
      out.write("\">\r\n");
      out.write("    <label for=\"password\">Password :</label> \r\n");
      out.write("    <input name=\"password\" id=\"password\" type=\"password\" /><br/>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"confirm_password\">Confirm Password:</label>\r\n");
      out.write("    <input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" /><br/>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("    <input type=\"submit\" value=\"Login\" name=\"submit\">\r\n");
      out.write("    </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
